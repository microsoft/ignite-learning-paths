trigger:
  branches:
    include:
    - master
  paths:
    include:
    - app/app10

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: azure-credentials
- name: RESOURCE_GROUP_NAME
  value: app10test
- name: LOCATION
  value: eastus
- name: TEMPLATE_FILE
  value: ./ops/ops40/deployment/azuredeploy.json
- name: FQDN_PREFIX
  value: ops40

steps:

- task: Bash@3
  displayName: 'Check for Code of Conduct'
  inputs:
    targetType: 'inline'
    script: |
      if [ -f "./codeofconduct.md" ]; then
          echo "Code of conduct exists."
      else
          echo "Code of conduct is missing."
          exit 1
      fi

- task: AzureCLI@1
  displayName: 'Create Resource Group'
  inputs:
    azureSubscription: 'nepeters-subscription'
    scriptLocation: inlineScript
    inlineScript: |
     az group create --name ${RESOURCE_GROUP_NAME}-$(Build.BuildId) --location ${LOCATION}

- task: AzureCLI@1
  displayName: 'Create Deployment'
  inputs:
    azureSubscription: 'nepeters-subscription'
    scriptLocation: inlineScript
    inlineScript: 'az group deployment create --resource-group ${RESOURCE_GROUP_NAME}-$(Build.BuildId) --template-file ${TEMPLATE_FILE} --parameters servicePrincipalId=$(CLIENT_ID) --parameters servicePrincipalSecret=$(CLIENT_SECRET) --parameters FQDNPrefix=${FQDN_PREFIX}'
  env:
    CLIENT_ID: $(CLIENT_ID)
    CLIENT_SECRET: $(CLIENT_SECRET)

- task: AzureCLI@1
  displayName: 'Deployment Progress'
  inputs:
    azureSubscription: 'nepeters-subscription'
    scriptLocation: inlineScript
    inlineScript: |
      BOOTSTRAP_CONTAINER=$(az container list --resource-group ${RESOURCE_GROUP_NAME}-$(Build.BuildId) --query "[?contains(name, '-bootstrap')].[name]" -o tsv)
      while [ $(az container show -n $BOOTSTRAP_CONTAINER -g ${RESOURCE_GROUP_NAME}-$(Build.BuildId) --query instanceView.state -o tsv) = 'Running' ]
      do echo "Deployment Running."
      done
      echo "Deployment Complete."