{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"prefix" : {
            "type" : "string",
            "metadata": {
                "description": "unique prefix passed in from parent template"
            }
        }
	},
	"variables": {
		"storage_name": "[concat('storage',parameters('prefix'))]",
        "queue_name": "twtqueue",
        "aciName": "bootstrap-container",
		"rgname": "[resourceGroup().name]",
		"bootstrapRoleAssignmentId": "[guid(concat(resourceGroup().id, 'contributor'))]",
		"identityName": "bootstrap-creds",
		"contributorRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
		"containerName": "logs",
		"deploymentImage": "neilpeterson/itt-bootstrap:2.0",
		"sourceRepo": "https://github.com/microsoft/ignite-learning-paths.git",
		"entrypoint": "/ops/ops50/deployment/deploy-queue.sh"
	},
	"resources": [
        {
			"type": "Microsoft.ManagedIdentity/userAssignedIdentities",
			"name": "bootstrap-creds",
			"apiVersion": "2018-11-30",
			"location": "[resourceGroup().location]"
		},
		{
			"type": "Microsoft.Authorization/roleAssignments",
			"apiVersion": "2018-09-01-preview",
			"name": "[variables('bootstrapRoleAssignmentId')]",
			"dependsOn": [
				"[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
			],
			"properties": {
				"roleDefinitionId": "[variables('contributorRoleDefinitionId')]",
				"principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), '2015-08-31-preview').principalId]",
				"scope": "[resourceGroup().id]",
				"principalType": "ServicePrincipal"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"sku": {
				"name": "Standard_LRS"
			},
			"kind": "StorageV2",
			"name": "[variables('storage_name')]",
			"apiVersion": "2018-07-01",
			"location": "[resourceGroup().location]",
			"properties": {
				"accessTier": "Hot",
				"supportsHttpsTrafficOnly": false
			},
			"dependsOn": []
		},
        {
			"type": "Microsoft.ContainerInstance/containerGroups",
			"apiVersion": "2018-10-01",
			"name": "[variables('aciName')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Authorization/roleAssignments', variables('bootstrapRoleAssignmentId'))]",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('storage_name') )]"
			],
			"identity": {
				"type": "UserAssigned",
				"userAssignedIdentities": {
					"[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]": {}
				}
			},
			"properties": {
				"osType": "Linux",
				"restartPolicy": "Never",
				"containers": [{
					"name": "[variables('containerName')]",
					"properties": {
						"image": "[variables('deploymentImage')]",
						"command": [
							"/bin/sh",
							"-c",
							"sh /boot-strap.sh"
						],
						"resources": {
							"requests": {
								"cpu": 2,
								"memoryInGB": 4
							}
						},
						"environmentVariables": [
							{
								"name": "SOURCE_REPOSITORY",
								"secureValue": "[variables('sourceRepo')]"
							},
							{
								"name": "ENTRYPOINT",
								"secureValue": "[variables('entrypoint')]"
							},
							{
								"name": "MANAGED_IDENTITY",
								"secureValue": "[concat(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')))]"
							},
                            {
								"name": "QUEUE_NAME",
								"secureValue": "[variables('queue_name')]"
							},
                            {
								"name": "STORAGE_ACCOUNT_NAME",
								"secureValue": "[variables('storage_name')]"
							},
                            {
								"name": "STORAGE_ACCOUNT_KEY",
								"secureValue": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage_name')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
							}
						]
					}
				}]
			}
		}
	],
	"outputs": {
		"storageAccountName": {
			"type": "string",
			"value": "[variables('storage_name')]"
		},
		"storageAccountKey": {
			"type": "string",
			"value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage_name')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
		}
	}
}
