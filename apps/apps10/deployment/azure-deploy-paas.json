{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "siteName": {
        "type": "string"
      },
      "siteLocation": {
        "type": "string",
        "defaultValue": "centralus"
      },
      "sqlLogin": {
        "type": "string",
        "defaultValue": ""
      },
      "sqlPassword": {
        "type": "securestring",
        "defaultValue": ""
      },
      "repoUrl": {
        "type": "string",
        "defaultValue": "https://github.com/anthonychu/TailwindTraders-Website"
      },
      "branch": {
        "type": "string",
        "defaultValue": "monolith"
      }
    },
    "variables": {
      "deploymentMode": "standalone",  
      "name": "[toLower(replace(parameters('siteName'), '_', ''))]",
      "subscriptionId": "[subscription().id]",
      "location": "[parameters('siteLocation')]",
      "hostingEnvironment": "",
      "hostingPlanName": "[concat(variables('name'), '-plan')]",
      "serverFarmResourceGroup": "[resourceGroup().name]",
      "alwaysOn": true,
      "sku": "PremiumV2",
      "skuCode": "P1v2",
      "workerSize": "3",
      "workerSizeId": "3",
      "numberOfWorkers": "1",
      "currentStack": "dotnetcore",
      "appInsightsName": "[variables('name')]",
      "sqlServerName": "[concat(variables('name'), '-sqlsvr')]",
      "sqlDatabaseName": "[concat(variables('name'), '-sqldb')]",
      "collation": "SQL_Latin1_General_CP1_CI_AS",
      "maxSizeBytes": 2147483648,
      "sampleName": "",
      "licenseType": "",
      "readScaleOut": "Disabled",
      "zoneRedundant": false,
      "numberOfReplicas": 0,
      "minCapacity": "",
      "autoPauseDelay": "",
      "sqlSkuName": "Basic",
      "sqlTier": "Basic",
      "locationCode": "[toLower(replace(variables('location'), ' ', ''))]",
      "allowAzureIps": true,
      "apiUrl": "[if(equals(variables('deploymentMode'), 'standalone'), '/api/v1', 'https://f5dc03f4e99349f6b467.eastus.aksapp.io/webbff/v1')]",
      "apiUrlShoppingCart": "[if(equals(variables('deploymentMode'), 'standalone'), '/api/v1', 'https://f5dc03f4e99349f6b467.eastus.aksapp.io/cart-api')]",
      "cosmosAccountName": "[concat(variables('name'), '-mongo')]",
      "cosmosDatabaseName": "tailwind"
    },
    "resources": [
      {
        "apiVersion": "2018-02-01",
        "name": "[variables('name')]",
        "type": "Microsoft.Web/sites",
        "location": "[variables('location')]",
        "tags": {},
        "dependsOn": [
          "[concat('microsoft.insights/components/', variables('appInsightsName'))]",
          "[concat('Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
          "[concat('Microsoft.Sql/servers/', variables('sqlServerName'), '/databases/', variables('sqlDatabaseName'))]",
          "[concat('Microsoft.DocumentDB/databaseAccounts/', variables('cosmosAccountName'))]"
        ],
        "properties": {
          "name": "[variables('name')]",
          "siteConfig": {
            "appSettings": [
              {
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value": "[reference(concat('microsoft.insights/components/', variables('appInsightsName')), '2015-05-01').InstrumentationKey]"
              },
              {
                "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                "value": "~2"
              },
              {
                "name": "XDT_MicrosoftApplicationInsights_Mode",
                "value": "recommended"
              },
              {
                "name": "DiagnosticServices_EXTENSION_VERSION",
                "value": "~3"
              },
              {
                "name": "APPINSIGHTS_PROFILERFEATURE_VERSION",
                "value": "1.0.0"
              },
              {
                "name": "APPINSIGHTS_SNAPSHOTFEATURE_VERSION",
                "value": "1.0.0"
              },
              {
                "name": "InstrumentationEngine_EXTENSION_VERSION",
                "value": "~1"
              },
              {
                "name": "SnapshotDebugger_EXTENSION_VERSION",
                "value": "~1"
              },
              {
                "name": "XDT_MicrosoftApplicationInsights_BaseExtensions",
                "value": "~1"
              },
              {
                "name": "WEBSITE_NODE_DEFAULT_VERSION",
                "value": "10.15.2"
              },
              {
                "name": "ApiUrl",
                "value": "[variables('apiUrl')]"
              },
              {
                "name": "ApiUrlShoppingCart",
                "value": "[variables('apiUrlShoppingCart')]"
              },
              {
                "name": "MongoConnectionString",
                "value": "[if(equals(variables('deploymentMode'), 'standalone'), listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName')), '2015-04-08').connectionStrings[0].connectionString, '')]"
              },
              {
                "name": "SqlConnectionString",
                "value": "[if(equals(variables('deploymentMode'), 'standalone'), concat('Server=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('sqlDatabaseName'), ';Persist Security Info=False;User ID=', parameters('sqlLogin'), ';Password=', parameters('sqlPassword'), ';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;'), '')]"
              }
            ],
            "metadata": [
              {
                "name": "CURRENT_STACK",
                "value": "[variables('currentStack')]"
              }
            ],
            "alwaysOn": "[variables('alwaysOn')]"
          },
          "serverFarmId": "[concat('/subscriptions/', variables('subscriptionId'),'/resourcegroups/', variables('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]",
          "hostingEnvironment": "[variables('hostingEnvironment')]",
          "clientAffinityEnabled": true
        },
        "resources": [
          {
            "apiVersion": "2015-08-01",
            "name": "web",
            "type": "sourcecontrols",
            "dependsOn": [
              "[resourceId('Microsoft.Web/Sites', variables('name'))]"
            ],
            "properties": {
              "RepoUrl": "[parameters('repoURL')]",
              "branch": "[parameters('branch')]",
              "IsManualIntegration": true
            }
          }
        ]
      },
      {
        "apiVersion": "2018-02-01",
        "name": "[variables('hostingPlanName')]",
        "type": "Microsoft.Web/serverfarms",
        "location": "[variables('location')]",
        "kind": "",
        "tags": {},
        "dependsOn": [],
        "properties": {
          "name": "[variables('hostingPlanName')]",
          "workerSize": "[variables('workerSize')]",
          "workerSizeId": "[variables('workerSizeId')]",
          "numberOfWorkers": "[variables('numberOfWorkers')]",
          "hostingEnvironment": "[variables('hostingEnvironment')]"
        },
        "sku": {
          "Tier": "[variables('sku')]",
          "Name": "[variables('skuCode')]"
        }
      },
      {
        "apiVersion": "2015-05-01",
        "name": "[variables('appInsightsName')]",
        "type": "microsoft.insights/components",
        "location": "[variables('locationCode')]",
        "tags": null,
        "properties": {
          "ApplicationId": "[variables('name')]",
          "Request_Source": "IbizaWebAppExtensionCreate"
        }
      },
      {
        "condition": "[equals(variables('deploymentMode'), 'standalone')]",
        "apiVersion": "2015-05-01-preview",
        "location": "[variables('locationCode')]",
        "tags": {},
        "name": "[variables('sqlServerName')]",
        "properties": {
          "administratorLogin": "[parameters('sqlLogin')]",
          "administratorLoginPassword": "[parameters('sqlPassword')]",
          "version": "12.0"
        },
        "resources": [
          {
            "condition": "[equals(variables('deploymentMode'), 'standalone')]",
            "apiVersion": "2017-10-01-preview",
            "dependsOn": [
              "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
            ],
            "location": "[variables('locationCode')]",
            "tags": {},
            "name": "[variables('sqlDatabaseName')]",
            "properties": {
              "collation": "[variables('collation')]",
              "maxSizeBytes": "[variables('maxSizeBytes')]",
              "sampleName": "[variables('sampleName')]",
              "zoneRedundant": "[variables('zoneRedundant')]",
              "licenseType": "[variables('licenseType')]",
              "readScale": "[variables('readScaleOut')]",
              "readReplicaCount": "[variables('numberOfReplicas')]",
              "minCapacity": "[variables('minCapacity')]",
              "autoPauseDelay": "[variables('autoPauseDelay')]"
            },
            "sku": {
              "name": "[variables('sqlSkuName')]",
              "tier": "[variables('sqlTier')]"
            },
            "type": "databases"
          },
          {
            "condition": "[and(equals(variables('deploymentMode'), 'standalone'), variables('allowAzureIps'))]",
            "apiVersion": "2014-04-01-preview",
            "dependsOn": [
              "[concat('Microsoft.Sql/servers/', variables('sqlServerName'))]"
            ],
            "location": "[variables('locationCode')]",
            "name": "AllowAllWindowsAzureIps",
            "properties": {
              "endIpAddress": "0.0.0.0",
              "startIpAddress": "0.0.0.0"
            },
            "type": "firewallrules"
          }
        ],
        "type": "Microsoft.Sql/servers"
      },
      {
        "condition": "[equals(variables('deploymentMode'), 'standalone')]",
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "name": "[variables('cosmosAccountName')]",
              "apiVersion": "2016-03-31",
              "location": "[variables('location')]",
              "kind": "MongoDB",
              "properties": {
                  "databaseAccountOfferType": "Standard"
              }
          },
          {
        "condition": "[equals(variables('deploymentMode'), 'standalone')]",
              "type": "Microsoft.DocumentDB/databaseAccounts/apis/databases",
              "name": "[concat(variables('cosmosAccountName'), '/mongodb/', variables('cosmosDatabaseName'))]",
              "apiVersion": "2016-03-31",
              "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('cosmosAccountName'))]" ],
              "properties":{
                  "resource":{
                      "id": "[variables('cosmosDatabaseName')]"
                  }
              }
          },
          {
        "condition": "[equals(variables('deploymentMode'), 'standalone')]",
              "type": "Microsoft.DocumentDb/databaseAccounts/apis/databases/collections",
              "name": "[concat(variables('cosmosAccountName'), '/mongodb/', variables('cosmosDatabaseName'), '/cart')]",
              "apiVersion": "2016-03-31",
              "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts/apis/databases', variables('cosmosAccountName'), 'mongodb', variables('cosmosDatabaseName'))]" ],
              "properties":
              {
                  "resource":{
                      "id":  "cart",
                      "shardKey": { "email": "Hash" }
                  },
                  "options": { "throughput": "400" }
              }
          }
    ]
  }